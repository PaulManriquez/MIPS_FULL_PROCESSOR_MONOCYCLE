// Machine Code Instruction	// Assembly MIPS 	PC	Operation		
00000000000000000000000000000000// Reset	//0	    //Default Start
// Variable Iniatilization
10001100000100000000000000001010// lw $s0,10($0)    //1//$s0 = 20;
00000000000000000100000000100000// add $t0, $0, $0  //2//$t0 = 0;
10001100000010100000000000000010// lw $t2,2($0)	    //3//$t2 = 12;
00000000000000001001100000100000// add $s4, $0, $0  //4//$s4 = 0;
10001100000010010000000000001011// lw $t1,11($0)    //5//$t1 = 1;
10001100000010110000000000001100// lw $t3,12($0)    //6//$t3 = 4;
10001100000011010000000000001010// lw $t5           //7//$t5 = 20;
// sum_a                        //8//if($t0 == $t2)then PC=7
00010001000010100000000000000111// sum_a: beq $t0,$t2 numbers_b(7)	
00000010000010011000000000100010// sub $s0, $s0, $t1	//9//$s0 = 19;
10101101101100000000000000001101// sw $s0, 13($t5)//10// Stores $s0 
10001101101011000000000000001101// lw $t4, 13($t5)//11// Loads $s0 in $t4
00000001101010010110100000100000// add $t5, $t5, $t1//12
00000010100011001010000000100000// add $s4, $s4, $t4	//13	//$s4 = 19
00000001000010110100000000100000// add $t0, $t0, $t3	//14	//$t0 = 4
00001000000000000000000000001000// j sum_a	      //15	

// numbers_b:
10001100000100000000000000001100 // lw $s0,12($0)	//16	//$s0 = 4;
00000000000000000100000000100000 // add $t0, $0, $0	//17	//$t0 = 0;
10001100000010100000000000000010 // lw $t2,2($0)	//18	//$t2 = 12;
00000000000000001010100000100000 // add $s5, $0, $0	//19	//$s5 = 0;
// sum_b: beq $t0,$t2 subtraction 
00010001000010100000000000000111	// sum_b: beq $t0,$t2 subtraction(25)   //20	//if($t0 == $t2)then PC=25
00000010000010011000000000100000	// add $s0, $s0, $t1 //21 //$s0 = 5;
00000001101010010110100000100000	//add $t5, $t5, $t1  //22
10101101101100000000000000001101	// sw $s0, 13($t5)   //23 Stores $s0
10001101101011000000000000001101	// lw $t4, 13($t5)   //24 //$t4 = 5
00000010101011001010100000100000	// add $s5, $s5, $t4 //25 //$s5 = 5
00000001000010110100000000100000	// add $t0, $t0, $t3 //26 //$t0 = 4
00001000000000000000000000010100	// j sum_b		//27	
// subtraction:
00000010100101011011000000100010// sub $s6, $s4, $s5 //28//$s6=$s4-$s6;